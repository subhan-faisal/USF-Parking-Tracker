@model IEnumerable<USFParkingTracker.Models.ParkingLot>
@{
    ViewData["Title"] = "Manage Parking Data";
}

<div class="container">
    <h2 class="my-4">@ViewData["Title"]</h2>
    
    <div class="row">
        <div class="col-md-4 mb-4">
            <div class="card shadow">
                <div class="card-body">
                    <h5 class="card-title">Admin Actions</h5>
                    <div class="d-grid gap-2">
                        <a asp-action="Create" class="btn btn-primary mb-2">
                            <i class="bi bi-plus-circle"></i> Add New Parking Lot
                        </a>
                        
                        <form asp-action="RefreshData" method="post">
                            <button type="submit" class="btn btn-success mb-2 w-100">
                                <i class="bi bi-arrow-repeat"></i> Update All Lots
                            </button>
                        </form>
                        
                        <button class="btn btn-warning mb-2" id="importFromApi">
                            <i class="bi bi-cloud-upload"></i> Import from API
                        </button>
                        
                        <button class="btn btn-info mb-2" id="exportData">
                            <i class="bi bi-download"></i> Export Data
                        </button>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-8 mb-4">
            <div class="card shadow">
                <div class="card-body">
                    <div class="d-flex justify-content-between mb-3">
                        <h5 class="card-title">Parking Lots</h5>
                        <input type="text" class="form-control form-control-sm w-auto" id="searchLots" placeholder="Search lots...">
                    </div>
                    
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Type</th>
                                    <th>Capacity</th>
                                    <th>Available</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var lot in Model)
                                {
                                    <tr>
                                        <td>@lot.Name</td>
                                        <td>@lot.Type</td>
                                        <td>@lot.TotalSpaces</td>
                                        <td>@lot.AvailableSpaces</td>
                                        <td>
                                            <span class="badge @GetStatusBadgeClass(lot.Status)">
                                                @lot.Status.ToUpper()
                                            </span>
                                        </td>
                                        <td>
                                            <div class="btn-group btn-group-sm">
                                                <a asp-action="Edit" asp-route-id="@lot.Id" class="btn btn-primary">
                                                    Edit
                                                </a>
                                                <a asp-action="Delete" asp-route-id="@lot.Id" class="btn btn-danger">
                                                    Delete
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    
                    @if (!Model.Any())
                    {
                        <div class="text-center py-3">
                            <p class="text-muted">No parking lots available.</p>
                            <a asp-action="Create" class="btn btn-primary">
                                Add Parking Lot
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Search functionality
        document.getElementById('searchLots').addEventListener('input', function() {
            const searchText = this.value.toLowerCase();
            const rows = document.querySelectorAll('tbody tr');
            
            rows.forEach(row => {
                const name = row.cells[0].textContent.toLowerCase();
                const type = row.cells[1].textContent.toLowerCase();
                
                if (name.includes(searchText) || type.includes(searchText)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        });
        
        // Export data functionality
        document.getElementById('exportData').addEventListener('click', function() {
            fetch('/api/parking-lots')
                .then(response => response.json())
                .then(data => {
                    const dataStr = JSON.stringify(data, null, 2);
                    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);
                    
                    const exportFileDefaultName = `usf-parking-data-${new Date().toISOString().split('T')[0]}.json`;
                    
                    const linkElement = document.createElement('a');
                    linkElement.setAttribute('href', dataUri);
                    linkElement.setAttribute('download', exportFileDefaultName);
                    linkElement.click();
                })
                .catch(error => {
                    console.error('Error exporting data:', error);
                    alert('Error exporting data. Please try again.');
                });
        });
        
        // Import from API functionality (simulated)
        document.getElementById('importFromApi').addEventListener('click', function() {
            if (confirm('This will refresh all parking data from the external API. Continue?')) {
                fetch('/api/parking-lots/update-all', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => {
                    if (response.ok) {
                        alert('Data successfully imported from API');
                        location.reload();
                    } else {
                        throw new Error('Failed to import data');
                    }
                })
                .catch(error => {
                    console.error('Error importing data:', error);
                    alert('Error importing data. Please try again.');
                });
            }
        });
    </script>
}

@functions {
    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "open" => "bg-success",
            "limited" => "bg-warning",
            "full" => "bg-danger",
            "closed" => "bg-secondary",
            _ => "bg-primary"
        };
    }
}